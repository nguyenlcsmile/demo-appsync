AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Template

Resources:
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.index
      Runtime: python3.8
      Timeout: 180
      CodeUri: myFunction/

  awsAppSyncServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "appsync.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  chatQLApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: "ChatQL"
      AuthenticationType: "API_KEY"

  DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt chatQLApi.ApiId
      Name: DataSource
      Type: NONE

  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt chatQLApi.ApiId
      Definition: |
        schema {
          query: Query
          mutation: Mutation
          subscription: Subscription
        }

        type Query {}

        type Mutation {
          addSampleData(id: ID!, value: String!): SampleData
          addSampleData1(id: ID!, value: String!): SampleData1
        }

        type SampleData {
          id: ID!
          value: String!
          datetime: String
        }

        type SampleData1 {
          id: ID!
          value: String!
          datetime: String
        }

        input ModelSubscriptionIDInput {
          ne: ID
          eq: ID
          le: ID
          lt: ID
          ge: ID
          gt: ID
          contains: ID
          notContains: ID
          between: [ID]
          beginsWith: ID
          in: [ID]
          notIn: [ID]
        }

        input ModelSubscriptionStringInput {
          ne: String
          eq: String
          le: String
          lt: String
          ge: String
          gt: String
          contains: String
          notContains: String
          between: [String]
          beginsWith: String
          in: [String]
          notIn: [String]
        }

        input ModelSubscriptionTodoFilterInput {
          id: ModelSubscriptionIDInput
          name: ModelSubscriptionStringInput
          description: ModelSubscriptionStringInput
          and: [ModelSubscriptionTodoFilterInput]
          or: [ModelSubscriptionTodoFilterInput]
        }

        type Subscription {
          subscribeToNewMessage(filter: ModelSubscriptionTodoFilterInput): SampleData
            @aws_subscribe(mutations:["addSampleData"])
          subscribeToNewMessage1(filter: ModelSubscriptionTodoFilterInput): SampleData1
            @aws_subscribe(mutations:["addSampleData1"])
        }

  addSampleDataResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - GraphQLSchema
    Properties:
      ApiId: !GetAtt chatQLApi.ApiId
      DataSourceName: !GetAtt DataSource.Name
      FieldName: addSampleData
      Kind: UNIT
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "payload": {
            "id": $util.toJson($context.arguments.id),
            "value": $util.toJson($context.arguments.value)
          }
        }
      ResponseMappingTemplate: |
        {
          "id": $util.toJson($context.result.id),
          "value": $util.toJson($context.result.value),
          "datetime": $util.toJson($util.time.nowFormatted("yyyy-MM-dd HH:mm:ssZ"))
        }
      TypeName: Mutation
