AWSTemplateFormatVersion: "2010-09-09"

Resources:
  awsAppSyncServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "appsync.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  chatQLApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: "ChatQL"
      AuthenticationType: "API_KEY"

  DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt chatQLApi.ApiId
      Name: DataSource
      Type: NONE

  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt chatQLApi.ApiId
      Definition: |
        schema {
          query: Query
          mutation: Mutation
          subscription: Subscription
        }

        type Query {
          listSampleDatas: [SampleData]
        }

        type Mutation {
          addSampleData(id: ID!, key: String!): SampleData
        }

        type SampleData {
          id: ID!
          key: String!
          datetime: String
        }

        type Subscription {
          subscribeToNewMessage: SampleData
            @aws_subscribe(mutations:["addSampleData"])
        }
  addSampleDataResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - GraphQLSchema
    Properties:
      ApiId: !GetAtt chatQLApi.ApiId
      DataSourceName: !GetAtt DataSource.Name
      FieldName: addSampleData
      Kind: UNIT
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "payload": {
            "id": $util.toJson($context.arguments.id),
            "key": $util.toJson($context.arguments.key)
          }
        }
      ResponseMappingTemplate: |
        {
          "id": $util.toJson($context.result.id),
          "key": $util.toJson($context.result.key),
          "datetime": $util.toJson($util.time.nowFormatted("yyyy-MM-dd HH:mm:ssZ"))
        }
      TypeName: Mutation
